"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import List, Optional

class CurrentMark(str, Enum):
    X = 'X'
    O = 'O'


@dataclasses.dataclass
class Grid:
    cells: Optional[str] = dataclasses.field(default=None)
    



@dataclasses.dataclass
class MoveGrid:
    cells: Optional[str] = dataclasses.field(default=None)
    


class MoveSchemasStartingMark(str, Enum):
    X = 'X'
    O = 'O'


@dataclasses.dataclass
class MoveAfterState:
    grid: Optional[MoveGrid] = dataclasses.field(default=None)
    starting_mark: Optional[MoveSchemasStartingMark] = dataclasses.field(default=None)
    



@dataclasses.dataclass
class MoveSchemasGrid:
    cells: Optional[str] = dataclasses.field(default=None)
    


class MoveStartingMark(str, Enum):
    X = 'X'
    O = 'O'


@dataclasses.dataclass
class BeforeState:
    grid: Optional[MoveSchemasGrid] = dataclasses.field(default=None)
    starting_mark: Optional[MoveStartingMark] = dataclasses.field(default=None)
    


class Mark(str, Enum):
    X = 'X'
    O = 'O'


@dataclasses.dataclass
class PossibleMoves:
    after_state: Optional[MoveAfterState] = dataclasses.field(default=None)
    before_state: Optional[BeforeState] = dataclasses.field(default=None)
    cell_index: Optional[int] = dataclasses.field(default=None)
    mark: Optional[Mark] = dataclasses.field(default=None)
    


class StartingMark(str, Enum):
    X = 'X'
    O = 'O'

class Winner(str, Enum):
    X = 'X'
    O = 'O'


@dataclasses.dataclass
class AfterState:
    current_mark: Optional[CurrentMark] = dataclasses.field(default=None)
    game_not_started: Optional[bool] = dataclasses.field(default=None)
    game_over: Optional[bool] = dataclasses.field(default=None)
    grid: Optional[Grid] = dataclasses.field(default=None)
    possible_moves: Optional[List[PossibleMoves]] = dataclasses.field(default=None)
    starting_mark: Optional[StartingMark] = dataclasses.field(default=None)
    tie: Optional[bool] = dataclasses.field(default=None)
    winner: Optional[Winner] = dataclasses.field(default=None)
    winning_cells: Optional[List[int]] = dataclasses.field(default=None)
    



@dataclasses.dataclass
class Move:
    after_state: Optional[List[AfterState]] = dataclasses.field(default=None)
    

